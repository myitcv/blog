!!!
/[if lt IE 7] <html class="no-js lt-ie9 lt-ie8 lt-ie7">
/[if IE 7] <html class="no-js lt-ie9 lt-ie8">
/[if IE 8] <html class="no-js lt-ie9">
/ [if gt IE 8]><!
%html.no-js
  / <![endif]
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible"}/
    %title
    %meta{:content => "", :name => "description"}/
    %meta{:content => "width=device-width", :name => "viewport"}/
    %link{:href => "css/bootstrap.min.css", :rel => "stylesheet"}/
    :css
      body {
          padding-top: 60px;
          padding-bottom: 40px;
      }
    %link{:href => "css/bootstrap-responsive.min.css", :rel => "stylesheet"}/
    %link{:href => "css/main.css", :rel => "stylesheet"}/
    %script{:src => "js/vendor/modernizr-2.6.2-respond-1.1.0.min.js"}
  %body
    /[if lt IE 7]
      <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> or <a href="http://www.google.com/chromeframe/?redirect=true">activate Google Chrome Frame</a> to improve your experience.</p>
    / This code is taken from http://twitter.github.com/bootstrap/examples/hero.html
    .navbar.navbar-inverse.navbar-fixed-top
      .navbar-inner
        .container
          %a.btn.btn-navbar{"data-target" => ".nav-collapse", "data-toggle" => "collapse"}
            %span.icon-bar
            %span.icon-bar
            %span.icon-bar
          %a.brand{:href => "/lbscoding"} LBS Coding
          .nav-collapse.collapse
            %ul.nav
              %li.active
                %a{:href => "index.html"} Home
              %li
                %a{:href => "schedule.html"} Schedule
          / /.nav-collapse
    .container
      :textile
        h1. Session 2 Post-checklist

        As a follow up to Session 2, please ensure you have worked through and completed each of the following steps:
        
        # Run the @lbscoding_v03@ files in VirtualBox; I will be around in school so call/email me and we can get this setup, remove any old files etc (takes about 10-15 minutes)
        # Read through the slides, raise any questions you have - maybe even repeat the steps we took in class creating our first PaaS-deployed web app (you can call it something other than @myfirstapp@)
        # Ensure you can run and view @myfirstapp@ on your VirtualMachine and that an identical version is running in the PaaS. Update the content in the @index@ view to "match my version":http://myfirstapp-pjollymba2013.rhcloud.com/ (hint: remember you can view the HTML source of my version to see how the page is structured)

        p=. !{border:1px solid black}img/session_2_post_checkpoint.png!

        h2. Optional but highly recommended

        As I stressed during the information session, this course was only ever going to touch on the most important aspects of developing a web application, i.e. focussing on breadth vs depth. We aren't going to be a class of expert Ruby programmers for example. 

        So after each session I will suggest additional reading/learning.

        h3. Ruby the language

        We haven't really focussed much yet on Ruby as a programming language. Instead we have been issuing commands to Rails to generate code for us. And that said, we have only very briefly touched on the fact that Rails is a framework designed to help programmers build web applications. But hopefully you can see we've had to strike a balance between the high level theory and the practical aspects of actually building something to demonstrate progress.

        But in building any substantial web application we need to truly understand Ruby the language. 

        There are some great resources out there on the web, here are links to just a few:

        * "Why's (Poignant) Guide to Ruby":http://mislav.uniqpath.com/poignant-guide/book/ - a fun way to learn the language (watch out for the onion)
        * "Ruby Koans":http://rubykoans.com/ - "learn by doing" editing Ruby code as you go, comments in the Ruby code being the lesson text
        * "Ruby in Twenty Minutes":http://www.ruby-lang.org/en/documentation/quickstart/ - does exactly what it says on the tin
        * "Programming Ruby":http://www.ruby-doc.org/docs/ProgrammingRuby/ - the seminal work. This is how I learnt Ruby

        h3. HTML

        Editing the @index@ view gave us our first glance of HTML (those who have designed webpages before will be ahead here). HTML is ultimately the principal output of any web application.

        The "W3Schools HTML Tutorial":http://www.w3schools.com/html/default.asp is as good a place to start as any. 

        But as you saw you can view the source of any webpage/webapp and learn by seeing how others do things. Starting with the tutorial however will give you a good grip on the basics

      %hr/
      %footer
        %p &copy; Paul Jolly, 2013
    / /container
    %script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"}
    :javascript
      window.jQuery || document.write('<script src="js/vendor/jquery-1.9.1.min.js"><\/script>')
    %script{:src => "js/vendor/bootstrap.min.js"}
    %script{:src => "js/main.js"}
    :javascript
      var _gaq=[['_setAccount','UA-XXXXX-X'],['_trackPageview']];
      (function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
      g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
      s.parentNode.insertBefore(g,s)}(document,'script'));
